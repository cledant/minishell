/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_seek_exec_path_custom_env.c                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: cledant <marvin@42.fr>                     +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2016/01/29 12:24:04 by cledant           #+#    #+#             */
/*   Updated: 2016/01/29 12:26:07 by cledant          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "minishell.h"

int		ft_seek_exec_path_custom_env(char **argv, char **env, char **cpy_env)
{
	char	*path;
	char	*tmp;
	char	**list;
	char	**cpy_list;
	int		ret;

	ret = -1;
	if (ft_fork_process() == -1)
	{
		if ((path = ft_search_in_env(env, "PATH")) == NULL)
		{
			ft_putendl("minishell : command not found");
			return (-1);
		}
		else
		{
			path = path + 5;
			if (*path == '\0')
			{
				ft_putendl("minishell : command not found");
				return (-1);
			}
			else
			{
				if ((list = ft_strsplit(path, ':')) == NULL)
				{
					ft_putendl("minishell : not enough free memory");
					return (-1);
				}
				cpy_list = list;
				while (ret == -1 && *list != '\0')
				{
					if ((tmp = ft_strjoin(*list, "/")) == NULL)
					{
						ft_putendl("minishell : not enough free memory");
						return (-1);
					}
					if ((path = ft_strjoin(tmp, argv[0])) == NULL)
					{
						ft_putendl("minishell : not enough free memory");
						return (-1);
					}
					ret = execve(path, argv, cpy_env);
					list++;
				}
				if (*list == '\0')
					ft_putendl("minishell : command not found");
				ft_strdel_char2(&cpy_list);
			}
		}
	}
	else
		return (0);
	return (ret);
}
